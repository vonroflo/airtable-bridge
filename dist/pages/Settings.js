"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Settings;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const lucide_react_1 = require("lucide-react");
function Settings() {
    const [settings, setSettings] = (0, react_1.useState)({
        globalRateLimit: 1000,
        defaultBaseRateLimit: 300,
        queueConcurrency: 5,
        queueRetryDelay: 5000,
        queueMaxAttempts: 3,
        cacheTtl: 300000,
        queryCacheTtl: 600000,
        syncBatchSize: 100,
        syncPollingInterval: 30000,
        webhookTimeout: 10000,
        alertThresholds: {
            queueDepth: 50,
            responseTime: 1000,
            errorRate: 5,
            storageUsage: 80
        }
    });
    const handleSave = () => {
        // Save settings logic here
        console.log('Saving settings:', settings);
    };
    const handleReset = () => {
        // Reset to defaults
        setSettings({
            globalRateLimit: 1000,
            defaultBaseRateLimit: 300,
            queueConcurrency: 5,
            queueRetryDelay: 5000,
            queueMaxAttempts: 3,
            cacheTtl: 300000,
            queryCacheTtl: 600000,
            syncBatchSize: 100,
            syncPollingInterval: 30000,
            webhookTimeout: 10000,
            alertThresholds: {
                queueDepth: 50,
                responseTime: 1000,
                errorRate: 5,
                storageUsage: 80
            }
        });
    };
    return ((0, jsx_runtime_1.jsxs)("div", { className: "space-y-6 animate-fade-in", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h1", { className: "text-3xl font-bold text-gray-900 dark:text-white", children: "Settings" }), (0, jsx_runtime_1.jsx)("p", { className: "text-gray-600 dark:text-gray-400 mt-1", children: "Configure system parameters and alert thresholds" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-2", children: [(0, jsx_runtime_1.jsxs)("button", { onClick: handleReset, className: "flex items-center space-x-2 px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition-colors", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.RefreshCw, { className: "w-4 h-4" }), (0, jsx_runtime_1.jsx)("span", { children: "Reset" })] }), (0, jsx_runtime_1.jsxs)("button", { onClick: handleSave, className: "flex items-center space-x-2 px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg transition-colors", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Save, { className: "w-4 h-4" }), (0, jsx_runtime_1.jsx)("span", { children: "Save Changes" })] })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "card", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-2 mb-6", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Shield, { className: "w-5 h-5 text-primary-600" }), (0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900 dark:text-white", children: "Rate Limiting" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Global Rate Limit (requests/minute)" }), (0, jsx_runtime_1.jsx)("input", { type: "number", value: settings.globalRateLimit, onChange: (e) => setSettings(prev => ({ ...prev, globalRateLimit: parseInt(e.target.value) })), className: "w-full px-3 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Default Base Rate Limit (requests/minute)" }), (0, jsx_runtime_1.jsx)("input", { type: "number", value: settings.defaultBaseRateLimit, onChange: (e) => setSettings(prev => ({ ...prev, defaultBaseRateLimit: parseInt(e.target.value) })), className: "w-full px-3 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500" })] })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "card", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-2 mb-6", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Clock, { className: "w-5 h-5 text-primary-600" }), (0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900 dark:text-white", children: "Queue Configuration" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-6", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Concurrency" }), (0, jsx_runtime_1.jsx)("input", { type: "number", value: settings.queueConcurrency, onChange: (e) => setSettings(prev => ({ ...prev, queueConcurrency: parseInt(e.target.value) })), className: "w-full px-3 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Retry Delay (ms)" }), (0, jsx_runtime_1.jsx)("input", { type: "number", value: settings.queueRetryDelay, onChange: (e) => setSettings(prev => ({ ...prev, queueRetryDelay: parseInt(e.target.value) })), className: "w-full px-3 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Max Attempts" }), (0, jsx_runtime_1.jsx)("input", { type: "number", value: settings.queueMaxAttempts, onChange: (e) => setSettings(prev => ({ ...prev, queueMaxAttempts: parseInt(e.target.value) })), className: "w-full px-3 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500" })] })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "card", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-2 mb-6", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Database, { className: "w-5 h-5 text-primary-600" }), (0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900 dark:text-white", children: "Cache Configuration" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Default Cache TTL (ms)" }), (0, jsx_runtime_1.jsx)("input", { type: "number", value: settings.cacheTtl, onChange: (e) => setSettings(prev => ({ ...prev, cacheTtl: parseInt(e.target.value) })), className: "w-full px-3 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500" }), (0, jsx_runtime_1.jsxs)("p", { className: "text-xs text-gray-500 dark:text-gray-400 mt-1", children: [(settings.cacheTtl / 1000 / 60).toFixed(1), " minutes"] })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Query Cache TTL (ms)" }), (0, jsx_runtime_1.jsx)("input", { type: "number", value: settings.queryCacheTtl, onChange: (e) => setSettings(prev => ({ ...prev, queryCacheTtl: parseInt(e.target.value) })), className: "w-full px-3 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500" }), (0, jsx_runtime_1.jsxs)("p", { className: "text-xs text-gray-500 dark:text-gray-400 mt-1", children: [(settings.queryCacheTtl / 1000 / 60).toFixed(1), " minutes"] })] })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "card", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-2 mb-6", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.AlertTriangle, { className: "w-5 h-5 text-primary-600" }), (0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900 dark:text-white", children: "Alert Thresholds" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Queue Depth" }), (0, jsx_runtime_1.jsx)("input", { type: "number", value: settings.alertThresholds.queueDepth, onChange: (e) => setSettings(prev => ({
                                            ...prev,
                                            alertThresholds: {
                                                ...prev.alertThresholds,
                                                queueDepth: parseInt(e.target.value)
                                            }
                                        })), className: "w-full px-3 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Response Time (ms)" }), (0, jsx_runtime_1.jsx)("input", { type: "number", value: settings.alertThresholds.responseTime, onChange: (e) => setSettings(prev => ({
                                            ...prev,
                                            alertThresholds: {
                                                ...prev.alertThresholds,
                                                responseTime: parseInt(e.target.value)
                                            }
                                        })), className: "w-full px-3 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Error Rate (%)" }), (0, jsx_runtime_1.jsx)("input", { type: "number", value: settings.alertThresholds.errorRate, onChange: (e) => setSettings(prev => ({
                                            ...prev,
                                            alertThresholds: {
                                                ...prev.alertThresholds,
                                                errorRate: parseInt(e.target.value)
                                            }
                                        })), className: "w-full px-3 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2", children: "Storage Usage (%)" }), (0, jsx_runtime_1.jsx)("input", { type: "number", value: settings.alertThresholds.storageUsage, onChange: (e) => setSettings(prev => ({
                                            ...prev,
                                            alertThresholds: {
                                                ...prev.alertThresholds,
                                                storageUsage: parseInt(e.target.value)
                                            }
                                        })), className: "w-full px-3 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500" })] })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "card", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-gray-900 dark:text-white mb-6", children: "System Information" }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6", children: [(0, jsx_runtime_1.jsxs)("div", { className: "p-4 bg-gray-50 dark:bg-gray-800/50 rounded-lg", children: [(0, jsx_runtime_1.jsx)("h4", { className: "text-sm font-medium text-gray-900 dark:text-white mb-2", children: "Version" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "v1.0.0" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "p-4 bg-gray-50 dark:bg-gray-800/50 rounded-lg", children: [(0, jsx_runtime_1.jsx)("h4", { className: "text-sm font-medium text-gray-900 dark:text-white mb-2", children: "Environment" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Development" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "p-4 bg-gray-50 dark:bg-gray-800/50 rounded-lg", children: [(0, jsx_runtime_1.jsx)("h4", { className: "text-sm font-medium text-gray-900 dark:text-white mb-2", children: "Uptime" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "2d 14h 32m" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "p-4 bg-gray-50 dark:bg-gray-800/50 rounded-lg", children: [(0, jsx_runtime_1.jsx)("h4", { className: "text-sm font-medium text-gray-900 dark:text-white mb-2", children: "Database" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "PostgreSQL 14.2" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "p-4 bg-gray-50 dark:bg-gray-800/50 rounded-lg", children: [(0, jsx_runtime_1.jsx)("h4", { className: "text-sm font-medium text-gray-900 dark:text-white mb-2", children: "Cache" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Redis 7.0" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "p-4 bg-gray-50 dark:bg-gray-800/50 rounded-lg", children: [(0, jsx_runtime_1.jsx)("h4", { className: "text-sm font-medium text-gray-900 dark:text-white mb-2", children: "Queue" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "BullMQ 4.0" })] })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "card border-red-200 dark:border-red-800", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-2 mb-6", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.AlertTriangle, { className: "w-5 h-5 text-red-600" }), (0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-semibold text-red-600 dark:text-red-400", children: "Danger Zone" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "space-y-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between p-4 bg-red-50 dark:bg-red-900/20 rounded-lg", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h4", { className: "text-sm font-medium text-gray-900 dark:text-white", children: "Clear All Caches" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Remove all cached data. This will temporarily impact performance." })] }), (0, jsx_runtime_1.jsx)("button", { className: "px-4 py-2 bg-red-600 hover:bg-red-700 text-white text-sm rounded-lg transition-colors", children: "Clear Caches" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between p-4 bg-red-50 dark:bg-red-900/20 rounded-lg", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h4", { className: "text-sm font-medium text-gray-900 dark:text-white", children: "Reset All Queues" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Clear all pending jobs. This will cancel in-progress operations." })] }), (0, jsx_runtime_1.jsx)("button", { className: "px-4 py-2 bg-red-600 hover:bg-red-700 text-white text-sm rounded-lg transition-colors", children: "Reset Queues" })] })] })] })] }));
}
//# sourceMappingURL=Settings.js.map