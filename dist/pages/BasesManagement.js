"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = BasesManagement;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const lucide_react_1 = require("lucide-react");
const StatusBadge_1 = __importDefault(require("../components/ui/StatusBadge"));
const LoadingSpinner_1 = __importDefault(require("../components/ui/LoadingSpinner"));
const useBases_1 = require("../hooks/useBases");
function BasesManagement() {
    const [searchTerm, setSearchTerm] = (0, react_1.useState)('');
    const [showAddModal, setShowAddModal] = (0, react_1.useState)(false);
    const [selectedBase, setSelectedBase] = (0, react_1.useState)(null);
    const { data: basesData, isLoading } = (0, useBases_1.useBases)();
    const updateBaseMutation = (0, useBases_1.useUpdateBase)();
    const deleteBaseMutation = (0, useBases_1.useDeleteBase)();
    const filteredBases = basesData?.bases?.filter(base => base.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
        base.baseId.toLowerCase().includes(searchTerm.toLowerCase())) || [];
    const handleToggleActive = async (base) => {
        try {
            await updateBaseMutation.mutateAsync({
                baseId: base.baseId,
                isActive: !base.isActive
            });
        }
        catch (error) {
            console.error('Failed to toggle base status:', error);
        }
    };
    if (isLoading) {
        return ((0, jsx_runtime_1.jsx)("div", { className: "flex items-center justify-center h-64", children: (0, jsx_runtime_1.jsx)(LoadingSpinner_1.default, { size: "lg" }) }));
    }
    return ((0, jsx_runtime_1.jsxs)("div", { className: "space-y-6 animate-fade-in", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h1", { className: "text-3xl font-bold text-gray-900 dark:text-white", children: "Bases Management" }), (0, jsx_runtime_1.jsx)("p", { className: "text-gray-600 dark:text-gray-400 mt-1", children: "Configure and monitor your Airtable bases" })] }), (0, jsx_runtime_1.jsxs)("button", { onClick: () => setShowAddModal(true), className: "flex items-center space-x-2 px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg transition-colors", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, { className: "w-4 h-4" }), (0, jsx_runtime_1.jsx)("span", { children: "Add Base" })] })] }), (0, jsx_runtime_1.jsx)("div", { className: "card", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex-1 relative", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Search, { className: "absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" }), (0, jsx_runtime_1.jsx)("input", { type: "text", placeholder: "Search bases...", value: searchTerm, onChange: (e) => setSearchTerm(e.target.value), className: "w-full pl-10 pr-4 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent text-sm" })] }), (0, jsx_runtime_1.jsx)("div", { className: "flex items-center space-x-2", children: (0, jsx_runtime_1.jsxs)("select", { className: "px-3 py-2 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-primary-500", children: [(0, jsx_runtime_1.jsx)("option", { value: "", children: "All Status" }), (0, jsx_runtime_1.jsx)("option", { value: "active", children: "Active" }), (0, jsx_runtime_1.jsx)("option", { value: "inactive", children: "Inactive" })] }) })] }) }), (0, jsx_runtime_1.jsxs)("div", { className: "card", children: [(0, jsx_runtime_1.jsx)("div", { className: "overflow-x-auto", children: (0, jsx_runtime_1.jsxs)("table", { className: "w-full", children: [(0, jsx_runtime_1.jsx)("thead", { children: (0, jsx_runtime_1.jsxs)("tr", { className: "border-b border-gray-200/50 dark:border-gray-700/50", children: [(0, jsx_runtime_1.jsx)("th", { className: "text-left py-4 px-4 text-sm font-medium text-gray-600 dark:text-gray-400", children: "Base" }), (0, jsx_runtime_1.jsx)("th", { className: "text-left py-4 px-4 text-sm font-medium text-gray-600 dark:text-gray-400", children: "Status" }), (0, jsx_runtime_1.jsx)("th", { className: "text-left py-4 px-4 text-sm font-medium text-gray-600 dark:text-gray-400", children: "Tables" }), (0, jsx_runtime_1.jsx)("th", { className: "text-left py-4 px-4 text-sm font-medium text-gray-600 dark:text-gray-400", children: "Rate Limit" }), (0, jsx_runtime_1.jsx)("th", { className: "text-left py-4 px-4 text-sm font-medium text-gray-600 dark:text-gray-400", children: "API Calls Today" }), (0, jsx_runtime_1.jsx)("th", { className: "text-left py-4 px-4 text-sm font-medium text-gray-600 dark:text-gray-400", children: "Last Updated" }), (0, jsx_runtime_1.jsx)("th", { className: "text-left py-4 px-4 text-sm font-medium text-gray-600 dark:text-gray-400", children: "Actions" })] }) }), (0, jsx_runtime_1.jsx)("tbody", { children: filteredBases.map((base) => ((0, jsx_runtime_1.jsxs)("tr", { className: "border-b border-gray-200/30 dark:border-gray-700/30 hover:bg-gray-50/50 dark:hover:bg-gray-800/50 transition-colors", children: [(0, jsx_runtime_1.jsx)("td", { className: "py-4 px-4", children: (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { className: "text-sm font-medium text-gray-900 dark:text-white", children: base.name }), (0, jsx_runtime_1.jsx)("p", { className: "text-xs text-gray-500 dark:text-gray-400 font-mono", children: base.baseId })] }) }), (0, jsx_runtime_1.jsx)("td", { className: "py-4 px-4", children: (0, jsx_runtime_1.jsx)(StatusBadge_1.default, { status: base.isActive ? 'active' : 'inactive' }) }), (0, jsx_runtime_1.jsx)("td", { className: "py-4 px-4 text-sm text-gray-700 dark:text-gray-300", children: base._count?.tables || 0 }), (0, jsx_runtime_1.jsxs)("td", { className: "py-4 px-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "text-sm text-gray-700 dark:text-gray-300", children: [base.rateLimitRpm, "/min"] }), (0, jsx_runtime_1.jsxs)("div", { className: "text-xs text-gray-500 dark:text-gray-400", children: [Math.floor(base.rateLimitRpm / 60), "/sec"] })] }), (0, jsx_runtime_1.jsxs)("td", { className: "py-4 px-4", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-sm text-gray-700 dark:text-gray-300", children: Math.floor(Math.random() * 1000) }), (0, jsx_runtime_1.jsx)("div", { className: "w-full bg-gray-200 dark:bg-gray-700 rounded-full h-1.5 mt-1", children: (0, jsx_runtime_1.jsx)("div", { className: "bg-primary-500 h-1.5 rounded-full", style: { width: `${Math.random() * 100}%` } }) })] }), (0, jsx_runtime_1.jsx)("td", { className: "py-4 px-4 text-sm text-gray-500 dark:text-gray-400", children: new Date(base.updatedAt).toLocaleDateString() }), (0, jsx_runtime_1.jsx)("td", { className: "py-4 px-4", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-2", children: [(0, jsx_runtime_1.jsx)("button", { onClick: () => handleToggleActive(base), className: `p-1.5 rounded-lg transition-colors ${base.isActive
                                                                ? 'text-yellow-600 hover:bg-yellow-100 dark:hover:bg-yellow-900/30'
                                                                : 'text-green-600 hover:bg-green-100 dark:hover:bg-green-900/30'}`, title: base.isActive ? 'Pause' : 'Activate', children: base.isActive ? (0, jsx_runtime_1.jsx)(lucide_react_1.Pause, { className: "w-4 h-4" }) : (0, jsx_runtime_1.jsx)(lucide_react_1.Play, { className: "w-4 h-4" }) }), (0, jsx_runtime_1.jsx)("button", { onClick: () => setSelectedBase(base), className: "p-1.5 text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-100 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-lg transition-colors", title: "Edit", children: (0, jsx_runtime_1.jsx)(lucide_react_1.Edit, { className: "w-4 h-4" }) }), (0, jsx_runtime_1.jsx)("button", { onClick: () => {
                                                                if (confirm(`Are you sure you want to delete ${base.name}?`)) {
                                                                    deleteBaseMutation.mutate(base.baseId);
                                                                }
                                                            }, className: "p-1.5 text-red-600 hover:text-red-700 hover:bg-red-100 dark:hover:bg-red-900/30 rounded-lg transition-colors", title: "Delete", children: (0, jsx_runtime_1.jsx)(lucide_react_1.Trash2, { className: "w-4 h-4" }) })] }) })] }, base.id))) })] }) }), filteredBases.length === 0 && ((0, jsx_runtime_1.jsxs)("div", { className: "text-center py-12", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Database, { className: "w-12 h-12 text-gray-400 mx-auto mb-4" }), (0, jsx_runtime_1.jsx)("p", { className: "text-gray-500 dark:text-gray-400", children: searchTerm ? 'No bases found matching your search.' : 'No bases configured yet.' })] }))] }), basesData?.pagination && basesData.pagination.pages > 1 && ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsxs)("p", { className: "text-sm text-gray-700 dark:text-gray-300", children: ["Showing ", ((basesData.pagination.page - 1) * basesData.pagination.limit) + 1, " to", ' ', Math.min(basesData.pagination.page * basesData.pagination.limit, basesData.pagination.total), " of", ' ', basesData.pagination.total, " results"] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-2", children: [(0, jsx_runtime_1.jsx)("button", { className: "px-3 py-1 text-sm border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors", children: "Previous" }), (0, jsx_runtime_1.jsx)("button", { className: "px-3 py-1 text-sm border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors", children: "Next" })] })] }))] }));
}
//# sourceMappingURL=BasesManagement.js.map